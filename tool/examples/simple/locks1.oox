class Num
{
    int x;

    Num()
    {
        ;
    }
}

class Main
{
    static void main (Num a, Num b)
    {
        assume a != null ;
        fork Main.thread(a);
        lock (a)
        {
            lock (a)
            {
                a.x := 1;
                int value := a.x;
                assert value == 1;
            }
        }
        int ax := a.x;
        assert ax == 1 || ax == 2;
    }

    static void main_invalid1(Num a, Num b)
    {
        assume a != null ;
        fork Main.thread(a);
        lock (a)
        {
            lock (a)
            {
                a.x := 1;
                int value := a.x;
                assert value == 1;
            }
        }
        int ax := a.x;
        assert ax == 1 ;
    }

    static void thread(Num a)
    {
        lock (a)
        {
            a.x := 2;
            int value := a.x;
            assert value == 2;
        }
    }

    static void foo(Num a, Num b) {
        int x := a.x ;
        int y := b.x ;
        assert x == y ;
    }
}
